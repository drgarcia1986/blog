<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Diego Garcia</title><link href="http://www.diego-garcia.info/" rel="alternate"></link><link href="http://www.diego-garcia.info/vim.atom.xml" rel="self"></link><id>http://www.diego-garcia.info/</id><updated>2016-03-10T10:00:00-03:00</updated><entry><title>Usando o comando :substitute para converter tags LaTeX para Markdown</title><link href="http://www.diego-garcia.info/2016/03/10/usando-o-comando-substitute-para-converter-tags-latex-em-markdown/" rel="alternate"></link><updated>2016-03-10T10:00:00-03:00</updated><author><name>Diego Garcia</name></author><id>tag:www.diego-garcia.info,2016-03-10:2016/03/10/usando-o-comando-substitute-para-converter-tags-latex-em-markdown/</id><summary type="html">&lt;p&gt;Recentemente decidi que iria ajudar o brother &lt;a href="http://cassiobotaro.github.io/"&gt;Cássio Botaro&lt;/a&gt; na nobre tarefa de migrar o clássico &lt;strong&gt;vimbook&lt;/strong&gt;
para o &lt;a href="https://www.gitbook.com/"&gt;gitbook&lt;/a&gt; (você também pode ajudar acessando o &lt;a href="https://github.com/cassiobotaro/vimbook"&gt;repositório do projeto&lt;/a&gt;).
Porém a versão anterior foi feita utilizando &lt;code&gt;LaTeX&lt;/code&gt;, enquanto que a nova, necessita ser feita em &lt;code&gt;markdown&lt;/code&gt;.
Eu poderia simplesmente substituir manualmente todas as tags &lt;em&gt;LaTeX&lt;/em&gt; por tags markdown, mas, sou muito preguiçoso pra isso.&lt;/p&gt;


&lt;h3&gt;O que foi preciso fazer&lt;/h3&gt;
&lt;p&gt;Escolhi um capítulo para converter e precisava além de converter, dividir os "títulos" (ou sessões) do capítulo em arquivos separados.
O texto no geral não tem diferenças, o que muda porém, são as tags de formatação de texto, como por exemplo, títulos, ênfase, links, etc.
Sendo assim, eu basicamente precisava copiar as sessões para novos arquivos e substituir as tags &lt;em&gt;LaTeX&lt;/em&gt; por tags &lt;em&gt;markdown&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Substituir as tag &lt;em&gt;LaTeX&lt;/em&gt; de forma manual seria algo extremamente tedioso e me levaria horas e mais horas.
Mas como você deve imaginar, uso o &lt;code&gt;VIM&lt;/code&gt; e como já disse, sou preguiçoso, então fui atrás de uma solução mais criativa.&lt;/p&gt;
&lt;h3&gt;O Comando :substitute&lt;/h3&gt;
&lt;p&gt;O Vim possui o comando &lt;code&gt;:substitute&lt;/code&gt; (abreviado como &lt;code&gt;:s&lt;/code&gt;) que funciona como um &lt;em&gt;"procurar &amp;amp; substituir"&lt;/em&gt;.
Ele funciona da seguinte maneira, procura por um padrão e caso encontre um texto que case com esse padrão, substitue por outro.
A syntax do comando &lt;em&gt;:substituite&lt;/em&gt; é a seguinte:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;[range]s[ubstitute]&lt;span class="sr"&gt;/{pattern}/&lt;/span&gt;{string}/[flags] [count]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Por exemplo, no texto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Use Python2 e sua vida será melhor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com o cursor na linha onde o texto se encontra, podemos aplicar o seguinte comando de substituição:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/Python2/&lt;/span&gt;Python3/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Obviamente o resultado será:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Use Python3 e sua vida será melhor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simples não? Por padrão, se não especificarmos o &lt;code&gt;range&lt;/code&gt; de atuação, o comando &lt;em&gt;:substitute&lt;/em&gt; só terá efeito na linha corrente,
porém, para realizar a busca em todo o arquivo basta utilizar o &lt;em&gt;range&lt;/em&gt; &lt;code&gt;%&lt;/code&gt; (que significa &lt;code&gt;1,$&lt;/code&gt;, ou seja, do início ao fim do arquivo corrente):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/Python2/&lt;/span&gt;Python3/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Outro detalhe é que, da forma como está o comando, somente a primeira ocorrência do texto &lt;em&gt;Python2&lt;/em&gt; seria substituída.
Se a intenção for substituir todas as ocorrências do texto, é possível utilizar a &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;g&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/Python2/&lt;/span&gt;Python3/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para saber mais opções e formas de usar o comando &lt;em&gt;:substitute&lt;/em&gt;, veja o &lt;em&gt;help&lt;/em&gt; através do comando &lt;code&gt;:help :substitute&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Utilizando Regex no comando :substitute&lt;/h3&gt;
&lt;p&gt;É possível utilizar &lt;em&gt;expressões regulares&lt;/em&gt; no comando &lt;em&gt;:substitute&lt;/em&gt; do Vim, o que significa que o céu é o limite.
Seguindo o exemplo anterior, poderíamos fazer a substituição utilizando uma regex:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/Python[1-2]\.\?[1-7]\?/&lt;/span&gt;Python3/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dessa forma, substituiria não só o texto &lt;em&gt;Python2&lt;/em&gt;, como também, &lt;em&gt;Python2.7&lt;/em&gt;, &lt;em&gt;Python2.6&lt;/em&gt;, &lt;em&gt;Python1&lt;/em&gt;, etc.&lt;/p&gt;
&lt;h4&gt;O modificador &lt;em&gt;very magic&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;Se você já está familiarizado com &lt;em&gt;expressões regulares&lt;/em&gt;, deve ter notado o &lt;em&gt;escape&lt;/em&gt; incomum no quantificador &lt;code&gt;?&lt;/code&gt;.
Isso ocorre pelo fato de que tantos os &lt;em&gt;meta-caracteres&lt;/em&gt;, quanto os &lt;em&gt;quantificadores&lt;/em&gt; e os indicadores de &lt;em&gt;grupo&lt;/em&gt; precisam ser escapados no comando &lt;em&gt;:substitute&lt;/em&gt;.
Porém, existe uma forma de evitar isso, usando o modificador &lt;code&gt;very magic&lt;/code&gt; (&lt;code&gt;\v&lt;/code&gt;).
Aplicando o modificador &lt;em&gt;very magic&lt;/em&gt; no comando anterior, ficaria desta forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/\vPython[1-2].?[1-7]?/&lt;/span&gt;Python3/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como essa é uma &lt;em&gt;regex&lt;/em&gt; simples, não é possível notar um ganho muito grande, porém, imagine uma regex um pouco mais complexa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/\d\{2,5\}\(\D\+\)\d\{1,3\}/&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ativando o modificador &lt;em&gt;very magic&lt;/em&gt; ficaria dessa forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/\v\d{2,5}(\D+)\d{1,3}/&lt;/span&gt;/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sendo assim, se você se perder nas barras de &lt;em&gt;escape&lt;/em&gt;, já sabe o que fazer.&lt;/p&gt;
&lt;h3&gt;Alguns truques de Regex que usei&lt;/h3&gt;
&lt;p&gt;Voltando ao desafio de migrar de &lt;em&gt;LaTeX&lt;/em&gt; para &lt;em&gt;markdown&lt;/em&gt;, para usar comandos e regex genéricas, eu teria que usar alguns artifícios, como &lt;code&gt;grupos&lt;/code&gt; e &lt;code&gt;retrovisores&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Grupos&lt;/h4&gt;
&lt;p&gt;Grupos em regex são definidos por &lt;em&gt;parênteses&lt;/em&gt; e servem a vários propósitos.
No caso em que estamos discutindo, a idéia é, recuperar valores de dentro de uma &lt;em&gt;tag&lt;/em&gt;.
Por exemplo, imagine o seguinte texto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Diego Garcia&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E imagine que a idéia seria recuperar apenas o conteúdo da tag &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; e separar entre primeiro e segundo nome (no caso &lt;em&gt;Diego&lt;/em&gt; e &lt;em&gt;Garcia&lt;/em&gt;), sendo assim, poderiamos usar a seguinte regex:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;name&amp;gt;(\w+)\s(\w+)&amp;lt;\/name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O resultado seria:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Match&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;name&amp;gt;Diego&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Garcia&amp;lt;/name&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Group 1&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Diego&amp;quot;&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Group 2&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Garcia&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ou seja, a frase inteira teria dado &lt;em&gt;match&lt;/em&gt;, porém, eu teria somente o texto &lt;em&gt;Diego&lt;/em&gt; no grupo 1 e o texto &lt;em&gt;Garcia&lt;/em&gt; no grupo 2 da minha regex.&lt;/p&gt;
&lt;h4&gt;Retrovisor&lt;/h4&gt;
&lt;p&gt;Quando utilizamos grupos em regex, podemos utilizar também &lt;em&gt;retrovisores&lt;/em&gt; para referenciarmos os valores recuperados nos grupos.
Os &lt;em&gt;retrovisores&lt;/em&gt; são representados por uma barra invertida e o número do grupo capturado, por exemplo &lt;code&gt;\1&lt;/code&gt;.
Usando o mesmo exemplo anterior junto ao comando &lt;em&gt;:substitute&lt;/em&gt; do vim, podemos por exemplo, separar esse texto em duas tags:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;s&lt;span class="sr"&gt;/&amp;lt;name&amp;gt;\(\w\+\)\s\(\w\+\)&amp;lt;\/name&amp;gt;/&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;\&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;\&lt;span class="sr"&gt;/first&amp;gt;&amp;lt;last&amp;gt;\2&amp;lt;\/last&amp;gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;o resultado do comando anterior seria:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;first&amp;gt;&lt;/span&gt;Diego&lt;span class="nt"&gt;&amp;lt;/first&amp;gt;&amp;lt;last&amp;gt;&lt;/span&gt;Garcia&lt;span class="nt"&gt;&amp;lt;/last&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Utilizando funções no comando :substitute&lt;/h3&gt;
&lt;p&gt;O Vim possui diversas funções builtin e elas podem ser usadas também no comando &lt;em&gt;:substitute&lt;/em&gt;.
Por exemplo, vamos imaginar uma simples conta matemática:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;10 + 3 = ?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Podemos realizar esse cálculo utilizando a função &lt;code&gt;eval&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;echo eval&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10 + 3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;É possível também fazer simplesmente &lt;code&gt;:echo 10 + 3&lt;/code&gt; mas usaremos o &lt;strong&gt;eval&lt;/strong&gt; mais a frente&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Porém, imagine um arquivo com várias dessas contas, com o comando &lt;em&gt;:substitute&lt;/em&gt; e a função &lt;em&gt;eval&lt;/em&gt; é possível realizar essas contas em massa.
Para isso, primeiro precisamos capturar a expressão com uma regex e usar a função &lt;code&gt;submatch&lt;/code&gt; para recuperar esse valor capturado.
A função &lt;em&gt;submatch&lt;/em&gt; funciona como os retrovisores, retornando os grupos de captura.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/^\([^=]*\)=\s*?/&lt;/span&gt;\&lt;span class="p"&gt;=&lt;/span&gt;submatch&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; . &lt;span class="s1"&gt;&amp;#39;= &amp;#39;&lt;/span&gt; . eval&lt;span class="p"&gt;(&lt;/span&gt;submatch&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note que estamos substituindo todo texto pela expressão matemática e seu resultado.
Para utilizar funções no comando &lt;em&gt;:substitute&lt;/em&gt; basta utilizar o caracter especial &lt;code&gt;=&lt;/code&gt;.
Outro detalhe importate é o fato de que para concatenar strings em funções no Vim, utilizasse o ponto (&lt;code&gt;.&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Para mais informações sobre as funções builtin do Vim, veja o &lt;em&gt;help&lt;/em&gt; com o comando &lt;code&gt;:h functions&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Substituições&lt;/h3&gt;
&lt;p&gt;Chega de explicações e teorias, vamos as substituições práticas que fiz entre tags &lt;em&gt;LaTeX&lt;/em&gt; e tags &lt;em&gt;markdown&lt;/em&gt;.
Basicamente todas as substituições seguiram o mesmo padrão, um pattern que case com o texto,
um grupo (ou mais) envolvendo a informação que quero recuperar e o uso de retrovisores na forma como desejo substituir o texto.&lt;/p&gt;
&lt;h4&gt;Ênfase (ou itálico)&lt;/h4&gt;
&lt;p&gt;Em &lt;em&gt;LaTeX&lt;/em&gt; para dar ênfase a um texto, utilizamos o seguinte padrão:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\em&lt;/span&gt; Texto&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enquanto que, em markdown, podemos fazer desta forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*Texto*
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Também é possível utilizar o &lt;strong&gt;underscore&lt;/strong&gt;: &lt;code&gt;_Texto_&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sendo assim, para fazer essa conversão, eu poderia usar o padrão &lt;code&gt;{\\em ([^}]*)}&lt;/code&gt;, onde, após o texto &lt;strong&gt;{em&lt;/strong&gt; e o espaço, crio um grupo de captura que pegue
qualquer texto diferente do caracter &lt;strong&gt;}&lt;/strong&gt; (a lista negada &lt;code&gt;[^}]&lt;/code&gt;) em zero ou qualquer quantidade (quantificador &lt;code&gt;*&lt;/code&gt;) e para fechar, indico o caracter &lt;strong&gt;}&lt;/strong&gt;
para que também possa ser substituido na execução do comando.
Convertendo essa regex para o comando &lt;em&gt;:substitute&lt;/em&gt; do Vim, já utilizando o retrovisor correspondente ao grupo de captura
para formatar o texto no padrão markdown (&lt;code&gt;*\1*&lt;/code&gt;), teremos o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/{\\em \([^}]*\)}/&lt;/span&gt;*\&lt;span class="m"&gt;1&lt;/span&gt;*/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para surtir efeito em todo arquivo, adicionei o &lt;em&gt;range&lt;/em&gt; &lt;code&gt;%&lt;/code&gt; e para o comando ser aplicado a todas ocorrências que casarem com o padrão, utilizei a flag &lt;code&gt;g&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Typewrite typeface&lt;/h4&gt;
&lt;p&gt;Seguindo a mesma lógica usada para converter texto em ênfase, também foram convertidos textos com &lt;em&gt;typewrite/typeface&lt;/em&gt;, que usam a seguinte notação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\tt&lt;/span&gt; Texto&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A idéia era converter para texto em highlight, que no markdown, é feito da seguinte forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;`Texto`
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como disse, a lógica do comando de substituição nesse caso é basicamente a mesma usada para os textos com ênfase, só substituindo o &lt;em&gt;\em&lt;/em&gt; por &lt;em&gt;\tt&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/{\\tt \([^}]*\)}/&lt;/span&gt;`\&lt;span class="m"&gt;1&lt;/span&gt;`/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O resto do comando segue o mesmo mecanismo.&lt;/p&gt;
&lt;h4&gt;SubSection&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;SubSection&lt;/em&gt; em &lt;em&gt;LaTeX&lt;/em&gt; são como &lt;em&gt;subtitulos&lt;/em&gt; de capítulos e usam a seguinte syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\subsection&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Texto&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No &lt;em&gt;vimbook&lt;/em&gt;, as &lt;em&gt;subsections&lt;/em&gt; foram convertidas para o terceiro nível de cabeçalho (ou &lt;code&gt;H3&lt;/code&gt; do &lt;em&gt;html&lt;/em&gt;), que em markdown usa a seguinte syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;### Texto
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sem muito segredo para fazer a substituição, a regex &lt;code&gt;\\subsection{([^}]*)}&lt;/code&gt; já é o suficiente, pois básicamente estamos recuperando o conteúdo dentro
das chaves (&lt;code&gt;{}&lt;/code&gt;) através de um grupo de captura que recupera tudo que for diferente do caracter de fechamento de chaves (&lt;code&gt;([^}]*)&lt;/code&gt;).
Dessa forma, podemos usar esse conteúdo em um retrovisor e assim montar nosso subtítulo formatado em markdown (&lt;code&gt;### \1&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/\\subsection{\([^}]*\)}/&lt;/span&gt;### \&lt;span class="m"&gt;1&lt;/span&gt;/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Devido ao uso massivo de &lt;code&gt;{}&lt;/code&gt; nas regex, optei por não usar o modificador &lt;em&gt;very magic&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Link&lt;/h4&gt;
&lt;p&gt;Links em &lt;em&gt;LaTeX&lt;/em&gt; são ligeiramente parecidos com markdown, você define o link e um texto de exibição desse link, utilizando a seguinte notação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\href&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;http://link.com&lt;span class="nb"&gt;}{&lt;/span&gt;texto&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Em markdown é um pouco mais simples e invertido, primeiro se é definido o texto para depois definir o link:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[texto](http://link.com)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para realizar essa conversão serão necessários dois grupos de captura, um para o &lt;em&gt;link&lt;/em&gt; e outro para o &lt;em&gt;texto&lt;/em&gt;.
A regex &lt;code&gt;\\href{([^}]*)}{([^}]*)}&lt;/code&gt; já da conta do recado.
Apesar de ser um pouco grande, não tem segredo, note que repeti o mesmo mecanismo das outras regex, grupos de captura que pegam tudo que não for o
caracter de fechamento do trecho de interesse (que em todos os casos, consiste no fechamento de chaves &lt;strong&gt;}&lt;/strong&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/\\href{\([^}]*\)}{\([^}]*\)}/&lt;/span&gt;[\&lt;span class="m"&gt;2&lt;/span&gt;]&lt;span class="p"&gt;(&lt;/span&gt;\&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No padrão da substituição, basta fazer referência aos retrovisores dos grupos capturados e formatar na notação de links markdown.&lt;/p&gt;
&lt;h4&gt;Section&lt;/h4&gt;
&lt;p&gt;Por fim, &lt;em&gt;section&lt;/em&gt; em &lt;em&gt;LaTeX&lt;/em&gt;, são títulos de capítulos e são descritos utilizando a seguinte notação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\section&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Texto&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No &lt;em&gt;vimbook&lt;/em&gt; cada &lt;em&gt;section&lt;/em&gt; basicamente se torna um arquivo separado e o título da &lt;em&gt;section&lt;/em&gt; se torna o &lt;em&gt;header&lt;/em&gt; da página, utilizando
o segundo nível de cabeçalho (&lt;code&gt;H2&lt;/code&gt; no &lt;em&gt;html&lt;/em&gt;).
Outro detalhe do &lt;em&gt;vimbook&lt;/em&gt; é que os cabeçalhos principais (&lt;code&gt;H1&lt;/code&gt; e &lt;code&gt;H2&lt;/code&gt;) utilizam o estilo &lt;strong&gt;setext&lt;/strong&gt; e os demais utilizam o padrão &lt;strong&gt;atx&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Veja mais sobre o estilo &lt;strong&gt;setext&lt;/strong&gt;, &lt;strong&gt;atx&lt;/strong&gt; e markdown em geral &lt;a href="https://daringfireball.net/projects/markdown/syntax"&gt;neste link&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sendo assim, as &lt;em&gt;sections&lt;/em&gt; foram convertidas utilizando o seguinte padrão markdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Texto
-----
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para recuperar o conteúdo referente ao título da section, podemos usa a regex &lt;code&gt;\\section{([^}]*)}&lt;/code&gt; que basicamente segue o mesmo padrão das outras que fizemos,
porém, nesse ponto temos um problema.
Como criar um comando genérico de substituição que coloque o caracter &lt;code&gt;-&lt;/code&gt; &lt;em&gt;n vezes&lt;/em&gt;,
de acordo com o tamanho do texto recuperado em um grupo de captura?
Simples, &lt;code&gt;functions&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Utilizaremos 3 funções:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;submatch&lt;/strong&gt;: semelhante ao retrovisor, retorna o valor de um grupo de captura.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;repeat&lt;/strong&gt;: retorna a repetição de uma string &lt;em&gt;n&lt;/em&gt; vezes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strlen&lt;/strong&gt;: retorna o tamanho de uma determinada string.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Então precisamos, imprimir o texto capturado no primeiro grupo de captura (&lt;code&gt;submatch(1)&lt;/code&gt;), adicionar uma quebra de linha (&lt;code&gt;\r&lt;/code&gt;) e repetir o caracter
&lt;code&gt;-&lt;/code&gt; (&lt;code&gt;repeat('-', count)&lt;/code&gt;) tantas vezes quanto o tamanho do texto capturado (&lt;code&gt;strlen(submatch(1))&lt;/code&gt;).
No final, temos o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/\\section{\([^}]*\)}/&lt;/span&gt;\&lt;span class="p"&gt;=&lt;/span&gt;submatch&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; . &lt;span class="s2"&gt;&amp;quot;\r&amp;quot;&lt;/span&gt; . repeat&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;strlen&lt;span class="p"&gt;(&lt;/span&gt;submatch&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;/&lt;span class="k"&gt;g&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pronto, com esses comandos toda a mágica acontece e não é preciso fazer diversar alterações repetitivas de forma manual.&lt;/p&gt;
&lt;h3&gt;Observação&lt;/h3&gt;
&lt;p&gt;Todos os recursos utilizados como &lt;em&gt;pattern&lt;/em&gt; nas pesquisas do comando &lt;em&gt;:substitute&lt;/em&gt;, também são válidos paras as busca simples do Vim (comando &lt;code&gt;/&lt;/code&gt;).&lt;/p&gt;
&lt;h3&gt;Alternativas&lt;/h3&gt;
&lt;p&gt;Todo esse processo poderia ter sido feito também utilizando o &lt;code&gt;SED&lt;/code&gt;, mas como outras edições foram necessárias, optei por fazer no Vim.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Referências&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.gitbook.com/book/cassiobotaro/vimbook/details"&gt;Vimbook&lt;/a&gt;&lt;br&gt;
&lt;a href="http://vimdoc.sourceforge.net/htmldoc/change.html#:substitute"&gt;:help :substitute&lt;/a&gt;&lt;br&gt;
&lt;a href="http://vim.wikia.com/wiki/Search_and_replace"&gt;Search and Replace&lt;/a&gt;&lt;br&gt;
&lt;a href="http://vimdoc.sourceforge.net/htmldoc/eval.html#functions"&gt;:help functions&lt;/a&gt;&lt;br&gt;
&lt;a href="http://aurelio.net/regex/guia/"&gt;Expressões Regulares - Guia de Consulta Rápida&lt;/a&gt;&lt;/p&gt;</summary><category term="regex"></category><category term="vim"></category></entry></feed>